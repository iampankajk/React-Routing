{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBC2D/BC,EAxDG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEE,KAAML,EACNM,QAAS,SAACC,GAAD,MAAc,iEAEzB,cAAC,EAAD,UACE,uBAAMC,QAfa,WACvBP,GAAc,IAcuBP,UAAWC,IAAQc,KAAMC,SA1BhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAkB5C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAEtC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAEpC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QA5Bc,WAC9B7B,GAAc,IA2BoCP,UAAU,MAApD,kC,gBC9BGqC,UAlBE,WACb,IAAMC,EAAUC,cAChB,EAA6BC,YAAQC,KAA9BC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OAEnBC,qBAAU,WACM,cAATD,GACCL,EAAQO,KAAK,aAEnB,CAACF,EAAOL,IAKV,OACI,cAAC,EAAD,CAAWZ,UAAoB,YAATiB,EAAoBpB,WAJtB,SAAAuB,GACpBJ,EAAYI","file":"static/js/3.39c5318b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2H4-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2aBax\",\"loading\":\"QuoteForm_loading__34MQk\",\"control\":\"QuoteForm_control__1mVlw\",\"actions\":\"QuoteForm_actions__1Je2e\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  }\n  const finishedEnteringHandler = () => {\n    setIsEntering(false);\n  }\n\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) => 'Are you sure you want to leave, all your data will be lost!'}\n      />\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishedEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport {addQuote} from '../lib/api';\r\n\r\nconst NewQuote = ()=>{\r\n    const history = useHistory();\r\n    const {sendRequest,status} = useHttp(addQuote)\r\n\r\n    useEffect(()=>{\r\n        if(status==='completed'){\r\n            history.push('/quotes')\r\n        }\r\n    },[status,history]);\r\n\r\n    const addQuoteHandler = quoteData=>{\r\n        sendRequest(quoteData)\r\n    }\r\n    return(\r\n        <QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler}></QuoteForm>\r\n    )\r\n};\r\n\r\nexport default NewQuote;"],"sourceRoot":""}